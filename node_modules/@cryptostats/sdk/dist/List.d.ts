import { Adapter, CacheKeyResolver } from './Adapter';
import { BaseCryptoStatsSDK } from './BaseCryptoStatsSDK';
import { SetupFn } from './types';
import { Module } from './Module';
interface AdapterData {
    id: string;
    queries: any;
    metadata: any;
    bundle?: string | null;
}
export interface SingleResult {
    id: string;
    bundle: string | null;
    result?: any;
    error?: any;
}
export interface ResultWithMetadata extends SingleResult {
    metadata: {
        [key: string]: any;
    };
}
export interface ResultsWithMetadata {
    id: string;
    bundle: string | null;
    results: {
        [query: string]: any;
    };
    errors: {
        [query: string]: any;
    };
    metadata: {
        [key: string]: any;
    };
}
export declare class List {
    readonly name: string;
    readonly adapters: Adapter[];
    readonly bundleIds: string[];
    private adaptersById;
    private bundlesById;
    private sdk?;
    private modules;
    private adaptersFetched;
    private cacheKeyResolver;
    constructor(name: string, sdk?: BaseCryptoStatsSDK);
    addAdapter({ id, queries, metadata, bundle }: AdapterData): Adapter;
    addBundle(id: string, metadata?: any): void;
    getAdapters(): Adapter[];
    getAdapter(id: string): Adapter;
    getIDs(): string[];
    getBundle(id: string): Promise<{
        [x: string]: any;
    }>;
    getBundles(): Promise<{
        id: string;
        metadata: {
            [x: string]: any;
        };
    }[]>;
    executeQuery(type: string, ...params: any[]): Promise<SingleResult[]>;
    executeQueryWithMetadata(type: string, ...params: any[]): Promise<ResultWithMetadata[]>;
    executeQueriesWithMetadata(types: string[], ...params: any[]): Promise<ResultsWithMetadata[]>;
    fetchAdapters(): Promise<Module[]>;
    fetchAdapterFromIPFS(cid: string): Promise<Module>;
    addAdaptersWithCode(code: string): Module;
    addAdaptersWithSetupFunction(setupFn: SetupFn): Module;
    setCacheKeyResolver(resolver: CacheKeyResolver): void;
    cleanupModules(): void;
}
export declare const Collection: typeof List;
export {};
