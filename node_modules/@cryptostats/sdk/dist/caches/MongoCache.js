"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MongoCache = void 0;
const mongodb_1 = require("mongodb");
class MongoCache {
    constructor(connectionString, { dbName = 'cryptostats', collectionName = 'cache', client = mongodb_1.MongoClient, } = {}) {
        this.dbName = dbName;
        this.collectionName = collectionName;
        this.client = new client(connectionString);
        this.client.connect();
    }
    async getValue(name, type, key) {
        const query = await this.client
            .db(this.dbName)
            .collection(this.collectionName)
            .findOne({ name, type, key });
        if (query && !isNaN(query.value)) {
            const value = parseFloat(query.value);
            return value;
        }
        return null;
    }
    async setValue(name, type, key, value) {
        await this.client
            .db(this.dbName)
            .collection(this.collectionName)
            .updateOne({ name, type, key }, { $set: { name, type, key, value } }, { upsert: true });
    }
}
exports.MongoCache = MongoCache;
