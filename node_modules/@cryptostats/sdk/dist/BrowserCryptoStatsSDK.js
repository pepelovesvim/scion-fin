"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.BrowserCryptoStatsSDK = void 0;
const MemoryCache_1 = require("./caches/MemoryCache");
const BaseCryptoStatsSDK_1 = require("./BaseCryptoStatsSDK");
const browserVM = __importStar(require("./utils/browser-vm"));
class BrowserCryptoStatsSDK extends BaseCryptoStatsSDK_1.BaseCryptoStatsSDK {
    constructor(options) {
        super({
            vm: browserVM,
            ...options,
        });
    }
    setupCache({ mongoConnectionString, redisConnectionString }) {
        if (mongoConnectionString) {
            console.warn('Mongo caches are disabled on the browser');
        }
        if (redisConnectionString) {
            console.warn('Redis caches are disabled on the browser');
        }
        this.cache = new MemoryCache_1.MemoryCache();
    }
}
exports.BrowserCryptoStatsSDK = BrowserCryptoStatsSDK;
