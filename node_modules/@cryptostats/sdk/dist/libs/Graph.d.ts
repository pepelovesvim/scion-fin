import { HTTP } from './HTTP';
interface GraphProps {
    http: HTTP;
    apiKey?: string;
}
interface BaseQueryOptions {
    subgraph?: string;
    subgraphId?: string;
    query: string;
    variables?: any;
    operationName?: string;
    node?: string;
}
interface SubgraphQueryOptions extends BaseQueryOptions {
    subgraph: string;
}
interface SubgraphIDQueryOptions extends BaseQueryOptions {
    subgraphId: string;
}
interface GraphQLQueryOptions extends BaseQueryOptions {
    url: string;
}
export declare type QueryOptions = SubgraphQueryOptions | SubgraphIDQueryOptions | GraphQLQueryOptions;
export declare class Graph {
    private http;
    apiKey: string;
    constructor({ http, apiKey }: GraphProps);
    query(options: QueryOptions): Promise<any>;
    query(subgraph: string, query: string, variables?: any): Promise<any>;
}
export {};
