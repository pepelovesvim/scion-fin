"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.HTTP = void 0;
require("isomorphic-fetch");
class HTTP {
    async get(url, options) {
        const request = await fetch(url, options);
        if (request.status !== 200) {
            throw new Error(`Request to ${url} returned an error`);
        }
        const response = await ((options === null || options === void 0 ? void 0 : options.plainText) ? request.text() : request.json());
        return response;
    }
    async post(url, body, options) {
        const headers = (options === null || options === void 0 ? void 0 : options.headers) || {};
        const contentType = headers['content-type'] || headers['Content-Type'] || 'application/json';
        const encodedBody = contentType === 'application/json' ? JSON.stringify(body) : body;
        const request = await fetch(url, {
            ...options,
            headers: {
                'content-type': contentType,
                ...headers,
            },
            body: encodedBody,
            method: 'POST',
        });
        if (request.status !== 200) {
            throw new Error(`Request to ${url} returned an error (${request.status})`);
        }
        const response = await ((options === null || options === void 0 ? void 0 : options.plainText) ? request.text() : request.json());
        return response;
    }
}
exports.HTTP = HTTP;
