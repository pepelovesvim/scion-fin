"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Log = exports.LOG_LEVEL = void 0;
var LOG_LEVEL;
(function (LOG_LEVEL) {
    LOG_LEVEL[LOG_LEVEL["DEBUG"] = 0] = "DEBUG";
    LOG_LEVEL[LOG_LEVEL["INFO"] = 1] = "INFO";
    LOG_LEVEL[LOG_LEVEL["WARN"] = 2] = "WARN";
    LOG_LEVEL[LOG_LEVEL["ERROR"] = 3] = "ERROR";
})(LOG_LEVEL = exports.LOG_LEVEL || (exports.LOG_LEVEL = {}));
const defaultListener = (level, ...args) => {
    switch (level) {
        case LOG_LEVEL.DEBUG:
            console.debug(...args);
            return;
        case LOG_LEVEL.INFO:
            console.info(...args);
            return;
        case LOG_LEVEL.WARN:
            console.warn(...args);
            return;
        case LOG_LEVEL.ERROR:
            console.error(...args);
            return;
    }
};
class Log {
    constructor({ onLog } = {}) {
        this.logListener = onLog || defaultListener;
    }
    getLogInterface() {
        const log = (...args) => this.logListener(LOG_LEVEL.INFO, ...args);
        return Object.assign(log, {
            debug: (...args) => this.logListener(LOG_LEVEL.DEBUG, ...args),
            info: log,
            log,
            warn: (...args) => this.logListener(LOG_LEVEL.WARN, ...args),
            error: (...args) => this.logListener(LOG_LEVEL.ERROR, ...args),
        });
    }
}
exports.Log = Log;
